/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package managedmyschool.View;

import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.YearMonth;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import managedmyschool.Controller.HelperMethodes;
import managedmyschool.Controller.SalaryMethodes;
import managedmyschool.Controller.TeachersMethodes;
import managedmyschool.Model.SalaryModel;
import managedmyschool.Model.Teacher;

/**
 *
 * @author achrafchennan
 */
public class TrackTeacherSalary extends javax.swing.JFrame {

    TeachersMethodes teachersMethodes;
    SalaryMethodes salaryMethodes;
    List<Teacher> teachersList;
    Teacher selectedTeacher;
    Boolean columsAreSet;
    String loginUser;
    private DefaultTableModel modelSetTable = new DefaultTableModel() {
        public Class<?> getColumnClass(int column) {
            switch (column) {
                case 0:
                    return int.class;
                case 1:
                    return String.class;
                default:
                    return String.class;
            }
        }

    };

    /**
     * Creates new form EditMyClass
     */
    public TrackTeacherSalary() {
        initComponents();
    }

    public TrackTeacherSalary(String loginUser) {
        initComponents();
        this.loginUser = loginUser;
    }

    public void createConstructor() {
        teachersMethodes = new TeachersMethodes();
        salaryMethodes = new SalaryMethodes();
        FillTeacherList();
        this.columsAreSet = false;

    }

    public void FillTeacherList() {
        teachersList = teachersMethodes.getTeachers();
    }

    public void emptyTable() {
        int rowCount = this.tbPayments.getRowCount();
        if (rowCount > 0) {
            for (int i = rowCount - 1; i > -1; i--) {
                modelSetTable.removeRow(i);
            }
        }
    }

    public void fillTable(List<SalaryModel> salaryList) {
        int currentCount = 0;
        int totaal = 0;
        this.emptyTable();

        tbPayments.setModel(modelSetTable);

        if (!this.columsAreSet) {
            modelSetTable.addColumn("Dag");
            modelSetTable.addColumn("Bedrag");
            this.columsAreSet = true;
        }

        for (SalaryModel salaryModel : salaryList) {

            Object[][] data = {new Object[]{salaryModel.getDay(), salaryModel.getAmount()}};
            modelSetTable.addRow(data);
            modelSetTable.setValueAt(salaryModel.getDay(), currentCount, 0);
            modelSetTable.setValueAt(salaryModel.getAmount(), currentCount, 1);
            currentCount++;
            totaal = totaal + salaryModel.getAmount();
        }
        this.lbTotaal.setText("Totaal: " + totaal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbTeachers = new javax.swing.JComboBox<>();
        btGoBack = new javax.swing.JButton();
        btSafePayment = new javax.swing.JButton();
        lbTeachersCostPageTitle = new javax.swing.JLabel();
        lbTeachers = new javax.swing.JLabel();
        lbLastEditBy = new javax.swing.JLabel();
        btSameAsPrevious = new javax.swing.JButton();
        lbSalary = new javax.swing.JLabel();
        tbSalary = new javax.swing.JTextField();
        cbMonth = new javax.swing.JComboBox<>();
        lbMonth = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        lbyear = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPayments = new javax.swing.JTable();
        lbTotaal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        if(this.teachersList == null)this.createConstructor();

        cbTeachers.addItem("Selecteer een leraar");

        for(Teacher teacher : this.teachersList){
            cbTeachers.addItem(teacher.getId()+"," + teacher.getLastName());
        }
        cbTeachers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTeachersActionPerformed(evt);
            }
        });

        btGoBack.setLabel("Vorige");
        btGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGoBackActionPerformed(evt);
            }
        });

        btSafePayment.setText("Opslaan");
        btSafePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSafePaymentActionPerformed(evt);
            }
        });

        lbTeachersCostPageTitle.setText("KostenOverzicht Leraren");

        lbTeachers.setText("Leraren:");

        lbLastEditBy.setText("Laatst aangepast door : ");

        btSameAsPrevious.setText("Zelfde Vorige maand");
        btSameAsPrevious.setActionCommand("");
        btSameAsPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSameAsPreviousActionPerformed(evt);
            }
        });

        lbSalary.setText("Uurloon: ");

        tbSalary.setToolTipText("");

        int[] months = new int[]{1,2,3,4,5,6,7,8,9,10,11,12};

        this.cbMonth.addItem(HelperMethodes.selectMonth);

        for(int month : months){
            this.cbMonth.addItem(String.valueOf(month));
        }
        cbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMonthActionPerformed(evt);
            }
        });

        lbMonth.setText("Maand:");

        this.cbYear.addItem(HelperMethodes.selectYear);
        String[] years = new String[]{"2018","2019","2020","2021","2022","2023","2024","2025"};

        for(String year : years){
            cbYear.addItem(year);

        }
        cbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYearActionPerformed(evt);
            }
        });

        lbyear.setText("Jaar:");

        tbPayments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbPayments);

        lbTotaal.setText("Totaal:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lbTeachers)
                        .addGap(138, 138, 138))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(lbSalary)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btSameAsPrevious))
                                    .addComponent(cbTeachers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbMonth))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lbyear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbMonth, 0, 88, Short.MAX_VALUE))))
                .addGap(92, 92, 92)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btSafePayment)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(lbTeachersCostPageTitle))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(lbLastEditBy, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(lbTotaal)))
                .addContainerGap(293, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btGoBack)
                    .addContainerGap(582, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lbTeachers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTeachers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbSalary)
                            .addComponent(tbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbyear))
                        .addGap(18, 18, 18)
                        .addComponent(btSameAsPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbLastEditBy)
                            .addComponent(lbTotaal))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lbTeachersCostPageTitle)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lbMonth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(btSafePayment)
                .addGap(28, 28, 28))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap(300, Short.MAX_VALUE)
                    .addComponent(btGoBack)
                    .addGap(33, 33, 33)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTeachersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTeachersActionPerformed
        // TODO add your handling code here:

        int teacherId = Integer.parseInt(this.cbTeachers.getSelectedItem().toString().split(",")[0]);
        this.selectedTeacher = this.teachersList.stream().filter(teacher -> teacher.getId() == teacherId).findFirst().get();
        this.tbSalary.setText(String.valueOf(this.selectedTeacher.getId()));

        if (!this.cbYear.getSelectedItem().toString().equalsIgnoreCase(HelperMethodes.selectYear)) {
            this.cbYear.setSelectedItem(HelperMethodes.selectYear);
        }

        this.emptyTable();

    }//GEN-LAST:event_cbTeachersActionPerformed

    private void btGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGoBackActionPerformed
        MyHome main = new MyHome();
        this.setVisible(false);

        main.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btGoBackActionPerformed

    private void btSafePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSafePaymentActionPerformed
        // TODO add your handling code here:
        String className = cbTeachers.getSelectedItem().toString();
        List<SalaryModel> salaryList = new ArrayList<SalaryModel>();
        int totaal  = 0;
        if (!this.cbMonth.getSelectedItem().toString().startsWith("Selecteer")
                && !this.cbYear.getSelectedItem().toString().startsWith("Selecteer")
                && !this.cbTeachers.getSelectedItem().toString().startsWith("Selecteer")) {
            int selectedMonth = Integer.parseInt(this.cbMonth.getSelectedItem().toString());
            int selectedYear = Integer.parseInt(this.cbYear.getSelectedItem().toString());
            for (int i = 0; i < this.modelSetTable.getRowCount(); i++) {
                Object day = this.modelSetTable.getValueAt(i, 0);
                Object amount = this.modelSetTable.getValueAt(i, 1);
                int dayset = Integer.parseInt(day.toString());
                int amountSet = Integer.parseInt(amount.toString());
                totaal  = totaal + amountSet;
                salaryList.add(new SalaryModel(amountSet, dayset, selectedMonth, selectedYear, this.selectedTeacher.getId(), ""));
            }
            
            String resp = this.salaryMethodes.updatepayTeacher(salaryList);
            this.lbTotaal.setText("Totaal: " + totaal);
            aanwezigheid.showResponse(resp, "Betaling leraar", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null,
                    "Selecteer een jaar, maand en leraar",
                    "Verplichten velden",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSafePaymentActionPerformed

    private void btSameAsPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSameAsPreviousActionPerformed

        //klopt nog niet deze zaterdag niet zelfde als vorige
        if (!this.cbMonth.getSelectedItem().toString().equalsIgnoreCase(HelperMethodes.selectMonth)
                && !this.cbYear.getSelectedItem().toString().equalsIgnoreCase(HelperMethodes.selectYear)
                && !this.cbTeachers.getSelectedItem().toString().equalsIgnoreCase(HelperMethodes.selectTeacher)) {
            int selectedMonth = Integer.parseInt(this.cbMonth.getSelectedItem().toString());
            int selectedYear = Integer.parseInt(this.cbYear.getSelectedItem().toString());
            List<SalaryModel> salaryList = salaryMethodes.getPaymentTeacher(selectedTeacher.getId(), selectedMonth - 1, selectedYear);
            salaryList.sort(Comparator.comparing(SalaryModel::getDay));

            fillTable(salaryList);

        } else {
            JOptionPane.showMessageDialog(null,
                    "Selecteer een jaar, maand en leraar",
                    "Verplichten velden",
                    JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btSameAsPreviousActionPerformed

    private void cbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMonthActionPerformed
        // TODO add your handling code here:
        Object source = evt.getSource();
        if (!this.cbMonth.getSelectedItem().toString().startsWith("Selecteer")
                && !this.cbYear.getSelectedItem().toString().startsWith("Selecteer")
                && !this.cbTeachers.getSelectedItem().toString().startsWith("Selecteer")) {

            int selectedMonth = Integer.parseInt(this.cbMonth.getSelectedItem().toString());
            int selectedYear = Integer.parseInt(this.cbYear.getSelectedItem().toString());

            YearMonth month = YearMonth.of(selectedYear, selectedMonth);
            List<LocalDate> fridayList = HelperMethodes.weeksInCalendar(month, DayOfWeek.FRIDAY);
            List<LocalDate> saturdayList = HelperMethodes.weeksInCalendar(month, DayOfWeek.SATURDAY);
            List<LocalDate> sundayList = HelperMethodes.weeksInCalendar(month, DayOfWeek.SUNDAY);
            List<Integer> days = new ArrayList<Integer>();
            List<SalaryModel> salaryList = salaryMethodes.getPaymentTeacher(selectedTeacher.getId(), selectedMonth, selectedYear);
            if (salaryList.size() < 1) {
                for (LocalDate localDate : fridayList) {
                    salaryList.add(new SalaryModel(0, localDate.getDayOfMonth(), selectedMonth, selectedYear, this.selectedTeacher.getId(), "System"));
                }
                for (LocalDate localDate : saturdayList) {
                    salaryList.add(new SalaryModel(0, localDate.getDayOfMonth(), selectedMonth, selectedYear, this.selectedTeacher.getId(), "System"));
                }
                for (LocalDate localDate : sundayList) {
                    salaryList.add(new SalaryModel(0, localDate.getDayOfMonth(), selectedMonth, selectedYear, this.selectedTeacher.getId(), "System"));
                }
                salaryMethodes.payTeacher(salaryList);
                salaryList = salaryMethodes.getPaymentTeacher(selectedTeacher.getId(), selectedMonth, selectedYear);

            }

            salaryList.sort(Comparator.comparing(SalaryModel::getDay));
            fillTable(salaryList);
        } else {
            JOptionPane.showMessageDialog(null,
                    "Selecteer een jaar, maand en leraar",
                    "Verplichten velden",
                    JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_cbMonthActionPerformed

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed
        // TODO add your handling code here
        if (!this.cbMonth.getSelectedItem().toString().equalsIgnoreCase(HelperMethodes.selectMonth)) {
            this.cbMonth.setSelectedItem(HelperMethodes.selectMonth);
            this.emptyTable();
        }

    }//GEN-LAST:event_cbYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrackTeacherSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrackTeacherSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrackTeacherSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrackTeacherSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrackTeacherSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGoBack;
    private javax.swing.JButton btSafePayment;
    private javax.swing.JButton btSameAsPrevious;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbTeachers;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbLastEditBy;
    private javax.swing.JLabel lbMonth;
    private javax.swing.JLabel lbSalary;
    private javax.swing.JLabel lbTeachers;
    private javax.swing.JLabel lbTeachersCostPageTitle;
    private javax.swing.JLabel lbTotaal;
    private javax.swing.JLabel lbyear;
    private javax.swing.JTable tbPayments;
    private javax.swing.JTextField tbSalary;
    // End of variables declaration//GEN-END:variables
}
