/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package managedmyschool.View;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import managedmyschool.Controller.ClassMethodes;
import managedmyschool.Controller.PaymentMethodes;
import managedmyschool.Controller.StudentsMethodes;
import managedmyschool.Controller.TeachersMethodes;
import managedmyschool.Model.Lesson;
import managedmyschool.Model.PaymentModel;
import managedmyschool.Model.Student;
import static managedmyschool.View.AddStudent.showResponse;

/**
 *
 * @author achrafchennan
 */
public class TrackStudentsPayments extends javax.swing.JFrame {

    StudentsMethodes studentsMethodes;
    ClassMethodes classMethodes;
    PaymentMethodes paymentMethodes;
    List<Lesson> lessonList;
    List<Student> studentsList;
    Boolean columsAreSet;
    Student selectedStudent;
    String loginUser;
    private DefaultTableModel modelSetTable = new DefaultTableModel() {
        public Class<?> getColumnClass(int column) {
            switch (column) {
                case 0:
                    return int.class;
                case 1:
                    return String.class;
                case 2:
                    return String.class;
                default:
                    return String.class;
            }
        }

    };

    /**
     * Creates new form EditMyClass
     */
    public TrackStudentsPayments() {
        initComponents();
    }

    public TrackStudentsPayments(String loginUser) {
        initComponents();
        this.loginUser = loginUser;
    }

    public void emptyTable() {
        int rowCount = this.tbPayments.getRowCount();
        if (rowCount > 0) {
            for (int i = rowCount - 1; i > -1; i--) {
                modelSetTable.removeRow(i);
            }
        }
    }

    public void createConstructor() {

        studentsMethodes = new StudentsMethodes();
        classMethodes = new ClassMethodes();
        paymentMethodes = new PaymentMethodes();
        this.lessonList = classMethodes.getClasses();
        columsAreSet = false;
        studentsList = new ArrayList<Student>();
    }

    public void fillCostTable(List<PaymentModel> paymentList) {
        int currentCount = 0;
        this.emptyTable();
        tbPayments.setModel(modelSetTable);

        if (!this.columsAreSet) {
            modelSetTable.addColumn("Maand");
            modelSetTable.addColumn("Bedrag");
            modelSetTable.addColumn("Geregisteerd door:");
            this.columsAreSet = true;
        }

        for (PaymentModel paymentModel : paymentList) {

            Object[][] data = {new Object[]{paymentModel.getMonth(), paymentModel.getAmount(), paymentModel.getRegisterdBy()}};
            modelSetTable.addRow(data);
            modelSetTable.setValueAt(paymentModel.getMonth(), currentCount, 0);
            modelSetTable.setValueAt(paymentModel.getAmount(), currentCount, 1);
            modelSetTable.setValueAt(paymentModel.getRegisterdBy(), currentCount, 2);
            currentCount++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPayments = new javax.swing.JTable();
        cbClasses = new javax.swing.JComboBox<>();
        btGoBack = new javax.swing.JButton();
        btSafePayments = new javax.swing.JButton();
        lbStudentsCostPageTitle = new javax.swing.JLabel();
        lbClass = new javax.swing.JLabel();
        lbStudent = new javax.swing.JLabel();
        cbStudents = new javax.swing.JComboBox<>();
        lbLastEditBy = new javax.swing.JLabel();
        lbStudent1 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        lbTot = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbPayments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbPayments);

        if(lessonList == null){
            createConstructor();
        }
        lessonList = this.classMethodes.getClasses();
        cbClasses.addItem("Selecteer een klas");

        for(Lesson les : lessonList){
            cbClasses.addItem(les.getClassName());
        }

        cbClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClassesActionPerformed(evt);
            }
        });

        btGoBack.setLabel("Vorige");
        btGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGoBackActionPerformed(evt);
            }
        });

        btSafePayments.setText("Opslaan");
        btSafePayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSafePaymentsActionPerformed(evt);
            }
        });

        lbStudentsCostPageTitle.setText("KostenOverzicht Studenten");

        lbClass.setText("Klas:");

        lbStudent.setText("Student:");

        this.cbStudents.addItem("Selecteer een Student");

        for(Student student : this.studentsList){
            cbStudents.addItem(student.getId() + ","+ student.getFirstName() + "," + student.getLastName());
        }
        cbStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStudentsActionPerformed(evt);
            }
        });

        lbLastEditBy.setText("Laatst aangepast door : ");

        lbStudent1.setText("Jaar:");

        this.cbYear.addItem("Selecteer een Jaar");
        String[] years = new String[]{"2018","2019","2020","2021","2022","2023","2024","2025"};

        for(String year : years){
            cbYear.addItem(year);

        }
        cbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYearActionPerformed(evt);
            }
        });

        lbTot.setText("Totaal:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbClass)
                                .addComponent(lbStudent)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(cbClasses, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lbStudent1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btSafePayments)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(lbStudentsCostPageTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(lbLastEditBy, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTot, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btGoBack)
                    .addContainerGap(582, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lbStudentsCostPageTitle)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lbClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbStudent1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLastEditBy)
                    .addComponent(lbTot))
                .addGap(41, 41, 41)
                .addComponent(btSafePayments)
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(300, Short.MAX_VALUE)
                    .addComponent(btGoBack)
                    .addGap(33, 33, 33)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClassesActionPerformed
        // TODO add your handling code here:
        String selectedClass = this.cbClasses.getSelectedItem().toString();
        if (!selectedClass.equalsIgnoreCase("Selecteer een klas")) {
            this.studentsList = this.studentsMethodes.getStudentsFromClass(selectedClass);
            for (Student student : studentsList) {
                cbStudents.addItem(student.getId() + "," + student.getFirstName() + "," + student.getLastName());
            }
        } else {
            cbStudents.removeAllItems();
            cbStudents.addItem("Selecteer een student");
            this.emptyTable();
        }
    }//GEN-LAST:event_cbClassesActionPerformed

    private void btGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGoBackActionPerformed
        MyHome main = new MyHome();
        this.setVisible(false);
        dispose();
        main.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btGoBackActionPerformed

    private void btSafePaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSafePaymentsActionPerformed
        // TODO add your handling code here:
        int rowCount = this.modelSetTable.getRowCount();
        int totaal = 0;
        int year = Integer.parseInt(this.cbYear.getSelectedItem().toString());
        String result = "";
        for (int i = 0; i < this.modelSetTable.getRowCount(); i++) {
            Object monthObject = this.modelSetTable.getValueAt(i, 0);
            Object amountObject = this.modelSetTable.getValueAt(i, 1);
            Object registerBy = this.modelSetTable.getValueAt(i, 2);

            int month = Integer.parseInt(monthObject.toString());
            int amount = Integer.parseInt(amountObject.toString());
            //    public String payMonthlyContribution(int studentId, int shartNumber, int month, int year, String registerdBy, int amount) {
            result = this.paymentMethodes.updateMonthlyContribution(this.selectedStudent.getId(), this.selectedStudent.getShartNumber(), month, year, registerBy.toString(), amount);
            totaal = totaal + amount;
        }
        showResponse(result, "Ingevoerd", JOptionPane.INFORMATION_MESSAGE);
        this.lbTot.setText("Totaal:" + totaal);


    }//GEN-LAST:event_btSafePaymentsActionPerformed

    private void cbStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStudentsActionPerformed
        // TODO add your handling code here:
        int studentId = Integer.parseInt(this.cbStudents.getSelectedItem().toString().split(",")[0]);

        selectedStudent = this.studentsList.stream().filter(student -> student.getId() == studentId).findFirst().get();

        this.cbYear.setSelectedItem(this.cbYear.getItemAt(0));
        this.emptyTable();


    }//GEN-LAST:event_cbStudentsActionPerformed

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed

        String selectedClass = this.cbClasses.getSelectedItem().toString();
        String selectedYear = this.cbYear.getSelectedItem().toString();
        int totaal = 0;
        if (!selectedClass.equalsIgnoreCase("Selecteer een klas") && !selectedYear.equalsIgnoreCase("Selecteer een Jaar") && this.selectedStudent != null) {
            String studentId = this.cbStudents.getSelectedItem().toString().split(",")[0];
            int[] months = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
            List<PaymentModel> paymentResult = this.paymentMethodes.getMonthlyContribution(Integer.parseInt(studentId), months, Integer.parseInt(selectedYear));
            if (paymentResult.isEmpty()) {
                //    public String payMonthlyContribution(int studentId, int shartNumber, int month, int year, String registerdBy, int amount) {
                for (int month : months) {
                    this.paymentMethodes.payMonthlyContribution(this.selectedStudent.getId(), this.selectedStudent.getShartNumber(), month, Integer.parseInt(selectedYear), "SYSTEM", 0);
                }
                paymentResult = this.paymentMethodes.getMonthlyContribution(Integer.parseInt(studentId), months, Integer.parseInt(selectedYear));
            }
            this.fillCostTable(paymentResult);
            for (PaymentModel paymentModel : paymentResult) {
                totaal = totaal + paymentModel.getAmount();
            }
            this.lbTot.setText("Totaal:" + totaal);
        }
    }//GEN-LAST:event_cbYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrackStudentsPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrackStudentsPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrackStudentsPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrackStudentsPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrackStudentsPayments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGoBack;
    private javax.swing.JButton btSafePayments;
    private javax.swing.JComboBox<String> cbClasses;
    private javax.swing.JComboBox<String> cbStudents;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbClass;
    private javax.swing.JLabel lbLastEditBy;
    private javax.swing.JLabel lbStudent;
    private javax.swing.JLabel lbStudent1;
    private javax.swing.JLabel lbStudentsCostPageTitle;
    private javax.swing.JLabel lbTot;
    private javax.swing.JTable tbPayments;
    // End of variables declaration//GEN-END:variables
}
